(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    111095,       2620]
NotebookOptionsPosition[     96793,       2276]
NotebookOutlinePosition[     97138,       2291]
CellTagsIndexPosition[     97095,       2288]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework 1", "Title",
 CellChangeTimes->{{3.713376887289749*^9, 
  3.713376889149472*^9}},ExpressionUUID->"a0f0a94a-fa70-4807-bf02-\
c574aa57c6c7"],

Cell[CellGroupData[{

Cell["1)", "Subsubsection",
 CellChangeTimes->{{3.7133768987600594`*^9, 
  3.7133769001356096`*^9}},ExpressionUUID->"63e32368-b2e8-4b8d-b649-\
8291100d62f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}], "^", "2"}], " ", "-", " ", 
     RowBox[{"(", 
      RowBox[{"2", "*", "x", "*", "y"}], ")"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"y", "^", "2"}], " ", "/", " ", 
      RowBox[{"x", "^", "2"}]}]}], ")"}]}], ";"}]], "Input",ExpressionUUID->\
"4e3b18d0-6a4c-497b-af5e-ca8d745baec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "=", 
  RowBox[{"10", "^", "3"}]}]], "Input",
 CellChangeTimes->{{3.7133769372777853`*^9, 
  3.713376966153722*^9}},ExpressionUUID->"4adb9e43-a63a-45e5-b68c-\
518286581a65"],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{
  3.7133792849271374`*^9},ExpressionUUID->"77b0dce9-d5d0-4d49-b524-\
bd2f9af5e058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", " ", 
    RowBox[{"i", "\[LessEqual]", "8"}], ",", " ", 
    RowBox[{"++", "i"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"10.0", "^", 
         RowBox[{"-", "i"}]}], ",", " ", "y"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71337697956227*^9, 3.713376998344755*^9}, {
   3.713378861556345*^9, 3.7133788619169254`*^9}, 
   3.7133791857973485`*^9},ExpressionUUID->"6cd99a58-ba7e-4109-88dd-\
bbdb49f224cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", "9.899999998999998`*^7"}]], "Print",
 CellChangeTimes->{
  3.7133796130269475`*^9},ExpressionUUID->"a3447106-5caf-4106-8396-\
83198e106837"],

Cell[BoxData[
 RowBox[{"-", "9.9989999999999`*^9"}]], "Print",
 CellChangeTimes->{
  3.7133796130269475`*^9},ExpressionUUID->"d624cd12-38f1-479f-9b51-\
8ed56e0f1e57"],

Cell[BoxData[
 RowBox[{"-", "9.99999`*^11"}]], "Print",
 CellChangeTimes->{
  3.7133796130425715`*^9},ExpressionUUID->"9d053ed6-30b9-41cf-992a-\
5c24aa3d7a5e"],

Cell[BoxData[
 RowBox[{"-", "9.9999999`*^13"}]], "Print",
 CellChangeTimes->{
  3.7133796130425715`*^9},ExpressionUUID->"e99eb4ae-37cc-4a57-8dc0-\
982c338de8db"],

Cell[BoxData[
 RowBox[{"-", "9.999999998999998`*^15"}]], "Print",
 CellChangeTimes->{
  3.7133796130425715`*^9},ExpressionUUID->"594eacec-2da6-4eca-8c5b-\
ce1e7f64d7ed"],

Cell[BoxData[
 RowBox[{"-", "9.99999999999`*^17"}]], "Print",
 CellChangeTimes->{
  3.7133796130581675`*^9},ExpressionUUID->"82aa6a1b-20e1-4fad-98ca-\
c73aba46ce32"],

Cell[BoxData[
 RowBox[{"-", "9.999999999999902`*^19"}]], "Print",
 CellChangeTimes->{
  3.7133796130581675`*^9},ExpressionUUID->"e4d1e84f-a846-4d62-a8fa-\
adc9b9346837"],

Cell[BoxData[
 RowBox[{"-", "9.999999999999998`*^21"}]], "Print",
 CellChangeTimes->{
  3.713379613073822*^9},ExpressionUUID->"8673e728-a889-46ff-82ff-\
ccd08c4cd28b"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fffferrorlist", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7133772078835087`*^9, 3.7133772079304104`*^9}, {
   3.7133773559809427`*^9, 3.713377365142726*^9}, {3.713378896178146*^9, 
   3.7133788963487434`*^9}, 3.713379217201874*^9, 3.7133796279238586`*^9, 
   3.7133798039429207`*^9},ExpressionUUID->"6f65873d-ecba-48eb-9a68-\
6b73584afca7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "8"}], ",", " ", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"e", "=", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"10.0", "^", 
           RowBox[{"-", "i"}]}], ",", "y"}], "]"}], " ", "-", " ", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "e", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"fffferrorlist", ",", "e"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7133769706541777`*^9, 3.713376977467678*^9}, 
   3.7133770229992495`*^9, {3.713377343408493*^9, 3.713377353728901*^9}, {
   3.713378905476581*^9, 3.7133789063664255`*^9}, 3.713379229750138*^9, {
   3.713379624056286*^9, 3.713379625306285*^9}, {3.7133797981710453`*^9, 
   3.713379803097359*^9}},ExpressionUUID->"14a2c9a0-9d1f-43ed-91f4-\
7dd5e0df2f69"],

Cell[CellGroupData[{

Cell[BoxData["9.900000098999998`*^7"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.713379807963531*^9},ExpressionUUID->"f716dc81-c1e5-4b33-93fb-\
6f8023e8d0d1"],

Cell[BoxData["9.9990000009999`*^9"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.713379807979156*^9},ExpressionUUID->"fedbf002-0a48-4ca6-b557-\
44a5292e105a"],

Cell[BoxData["9.99999000001`*^11"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.713379807979156*^9},ExpressionUUID->"083ac28b-7810-4f50-b51b-\
5102f04330a7"],

Cell[BoxData["9.9999999000001`*^13"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.713379807979156*^9},ExpressionUUID->"13e07a26-c7f7-4714-a409-\
3aff4afdfbbb"],

Cell[BoxData["9.999999999`*^15"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.7133798079947543`*^9},ExpressionUUID->"80e8edd4-443c-4b80-a5a2-\
e63adcd9232c"],

Cell[BoxData["9.99999999999`*^17"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.7133798079947543`*^9},ExpressionUUID->"b8dbe8bb-e87c-43fb-87db-\
302b3e6b26f4"],

Cell[BoxData["9.999999999999902`*^19"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.7133798080104094`*^9},ExpressionUUID->"037a5e9f-8081-4033-92c1-\
cde1adeb6019"],

Cell[BoxData["9.999999999999998`*^21"], "Print",
 CellChangeTimes->{3.7133796315504155`*^9, 
  3.7133798080104094`*^9},ExpressionUUID->"f26370ed-10fc-4b24-b6a7-\
c5120ce62a87"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["fffferrorlist"], "Input",
 CellChangeTimes->{{3.7133774509235935`*^9, 3.713377452874716*^9}, {
   3.713378989277091*^9, 3.7133789894188786`*^9}, 3.7133792363492985`*^9, 
   3.713379640680157*^9, 
   3.7133798153087187`*^9},ExpressionUUID->"8a86da80-a5fc-4070-a85f-\
b000929a790e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.900000098999998`*^7", ",", "9.9990000009999`*^9", ",", 
   "9.99999000001`*^11", ",", "9.9999999000001`*^13", ",", "9.999999999`*^15",
    ",", "9.99999999999`*^17", ",", "9.999999999999902`*^19", ",", 
   "9.999999999999998`*^21"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7133798175754013`*^9},ExpressionUUID->"7139345b-b588-4788-9b3e-\
249b9784d1e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "fffferrorlist", "]"}]], "Input",
 CellChangeTimes->{{3.7133778236312485`*^9, 3.71337785490591*^9}, {
   3.71337899651259*^9, 3.7133789966063805`*^9}, 3.7133792496559687`*^9, 
   3.713379650045455*^9, {3.7133798214697704`*^9, 
   3.713379822829007*^9}},ExpressionUUID->"82acd68d-e8a8-4ca2-901a-\
890386bcc409"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 9.900000098999998*^7}, {2., 9.9990000009999*^9}, {3., 
      9.99999000001*^11}, {4., 9.9999999000001*^13}, {5., 9.999999999*^15}, {
      6., 9.99999999999*^17}, {7., 9.999999999999902*^19}, {8., 
      9.999999999999998*^21}}]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8.}, {0, 2.4999999998499904`*^20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7133796504204516`*^9, 
  3.7133798237196035`*^9},ExpressionUUID->"6ad12ce8-72c4-4565-9973-\
c69b7bfc4d0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2)", "Subsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.713377024155527*^9, 3.713377405363628*^9, {3.7133779947975435`*^9, 
   3.7133779968293004`*^9}},ExpressionUUID->"673403ba-d5ec-4bea-b2de-\
2c35e868a4a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], "^", "2"}], ")"}], "/", " ", 
      RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "*", "x", "*", "y"}], ")"}], "/", " ", 
       RowBox[{"x", "^", "2"}]}], ")"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"y", "^", "2"}], "/", 
      RowBox[{"x", "^", "2"}]}]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gerrorlist", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713378001174614*^9, 3.713378109179799*^9}, {
  3.713378198629097*^9, 3.713378208005536*^9}, {3.7133784285585327`*^9, 
  3.7133784342634373`*^9}},ExpressionUUID->"331dd45a-a76b-4dc7-b88d-\
79de8a6b2a70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", " ", 
    RowBox[{"i", "\[LessEqual]", "8"}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"g", "[", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "i"}]}], ",", " ", "y"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.713378111868971*^9, 3.7133781937827616`*^9}, {
  3.713378230848941*^9, 3.713378274007677*^9}, {3.7133783063284326`*^9, 
  3.7133783111091805`*^9}, {3.713379524025509*^9, 
  3.713379528761612*^9}},ExpressionUUID->"be3cfa46-6442-455d-a1ff-\
66ab9b5570bf"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.7133795388604383`*^9},ExpressionUUID->"a24a599f-6f61-4619-82e9-\
e3a472ecfc4f"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.7133795388604383`*^9},ExpressionUUID->"980f6748-fdc8-46d0-bc30-\
d3d7b5f69483"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.713379538876037*^9},ExpressionUUID->"b6130c4f-57f0-41bf-88c9-\
0ff5cf1b7cf8"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.713379538876037*^9},ExpressionUUID->"66403a93-533a-4ad9-b1b0-\
19ace2442f63"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.7133795388916903`*^9},ExpressionUUID->"aceda6ff-76dd-45b0-896f-\
f6ec0110cdc9"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.7133795388916903`*^9},ExpressionUUID->"da176e0a-e04a-4ef5-ae68-\
6344caa7754a"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.7133795388916903`*^9},ExpressionUUID->"975bb4d6-5df1-4136-a845-\
414f61e83ea1"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.7133792742740555`*^9, 
  3.7133795389073133`*^9},ExpressionUUID->"a201e87f-de6d-425a-883f-\
0d313c30c25b"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "8"}], ",", 
      RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"err", "=", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"1", "-", " ", 
          RowBox[{"g", "[", 
           RowBox[{
            RowBox[{"10", "^", 
             RowBox[{"-", "i"}]}], ",", " ", "y"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"gerrorlist", ",", "err"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "gerrorlist"}]}]], "Input",
 CellChangeTimes->{{3.7133781187168903`*^9, 3.713378118732482*^9}, {
  3.7133783992711573`*^9, 3.713378404015543*^9}, {3.713378483776802*^9, 
  3.713378637994732*^9}},ExpressionUUID->"9b3afb8d-e5d2-42d9-bc19-\
e03f75cccacb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Input",
 CellChangeTimes->{{3.713378667337493*^9, 
  3.7133786683534575`*^9}},ExpressionUUID->"59390838-0dd9-4bbf-9ef4-\
d55718af923e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "gerrorlist", "]"}]], "Input",
 CellChangeTimes->{{3.7133786705882144`*^9, 
  3.71337867991738*^9}},ExpressionUUID->"3a1b5aaa-68ac-49b0-bdfb-\
94348bfc65aa"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf7BlQgQMqlwONL4DGF0HjS6DxZdD4Cmh8JTS+
ChpfDY2vgcbXQuProPH10PgGaHxDNL4RGt8YjW+CxjdF45uh8c3R+BZwPgCa
1Qwh
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 24.}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.713378680589224*^9},ExpressionUUID->"3f67c46c-49d6-4f42-9a9e-\
3e18b4f49f45"]
}, Open  ]],

Cell["\<\
functions g and f are identical but Mathematica must be doing the order of \
operations differently, producing different results.\
\>", "Text",
 CellChangeTimes->{{3.71337875358469*^9, 
  3.7133788086106653`*^9}},ExpressionUUID->"db3cdc69-07bd-4bbd-9ab7-\
34d9ed76b776"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3)", "Subsection",
 CellChangeTimes->{{3.7133788227688866`*^9, 3.713378824737917*^9}, {
  3.7133790510715694`*^9, 
  3.713379052462488*^9}},ExpressionUUID->"e422aed2-bb53-4f6f-b294-\
18d606666d15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "8"}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "i"}]}], ",", " ", "y"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7133790567771263`*^9, 3.713379084814556*^9}, {
  3.7133794674923863`*^9, 
  3.7133794740583754`*^9}},ExpressionUUID->"6e891a42-84c2-45c3-b4f5-\
ab95ed38f58a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["9899999999", "100"]}]], "Print",
 CellChangeTimes->{
  3.7133795992195406`*^9},ExpressionUUID->"38acb43d-2954-4932-a3ec-\
448505b6ce62"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["99989999999999", "10000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992351685`*^9},ExpressionUUID->"8c103102-f37d-40bb-a93c-\
eac2bcd29daf"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["999998999999999999", "1000000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992351685`*^9},ExpressionUUID->"8069839f-16ef-41dd-9328-\
211ebbf693ca"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["9999999899999999999999", "100000000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992351685`*^9},ExpressionUUID->"40224134-8168-4cf7-bbf3-\
f8844991f171"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["99999999989999999999999999", "10000000000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992508197`*^9},ExpressionUUID->"2a09e113-c03d-435e-bb69-\
138b7ddd9d19"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["999999999998999999999999999999", "1000000000000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992508197`*^9},ExpressionUUID->"dc35344b-7960-4a97-a160-\
1f148d4cc129"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["9999999999999899999999999999999999", 
   "100000000000000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992508197`*^9},ExpressionUUID->"5abf7c69-4bfe-4737-ba39-\
942d7f976f94"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["99999999999999989999999999999999999999", 
   "10000000000000000"]}]], "Print",
 CellChangeTimes->{
  3.7133795992664456`*^9},ExpressionUUID->"e72ae56e-f378-40fd-bbd2-\
906825bda746"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"herrorlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "8"}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"erro", "=", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"1", "-", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "i"}]}], ",", "y"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"herrorlist", ",", "erro"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713379342328492*^9, 3.713379357334773*^9}, {
  3.7133793906706376`*^9, 3.713379406581534*^9}, {3.713379666676502*^9, 
  3.713379728840419*^9}},ExpressionUUID->"71fbe25b-a58a-4265-b425-\
d66a0f1b31b6"],

Cell[CellGroupData[{

Cell[BoxData["herrorlist"], "Input",
 CellChangeTimes->{{3.7133797320914364`*^9, 
  3.7133797328886366`*^9}},ExpressionUUID->"f64be764-4dbc-4f29-9112-\
d35472d02374"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["9900000099", "100"], ",", 
   FractionBox["99990000009999", "10000"], ",", 
   FractionBox["999999000000999999", "1000000"], ",", 
   FractionBox["9999999900000099999999", "100000000"], ",", 
   FractionBox["99999999990000009999999999", "10000000000"], ",", 
   FractionBox["999999999999000000999999999999", "1000000000000"], ",", 
   FractionBox["9999999999999900000099999999999999", "100000000000000"], ",", 
   FractionBox["99999999999999990000009999999999999999", 
    "10000000000000000"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7133797335761385`*^9},ExpressionUUID->"43adb8b2-c326-4262-83fb-\
720235631669"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "herrorlist", "]"}]], "Input",
 CellChangeTimes->{{3.7133797405158606`*^9, 
  3.713379747746414*^9}},ExpressionUUID->"371551e2-d53b-4a43-9ffa-\
983912edc27d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 9.900000099*^7}, {2., 9.9990000009999*^9}, {3., 
      9.99999000001*^11}, {4., 9.9999999000001*^13}, {5., 9.999999999*^15}, {
      6., 9.99999999999*^17}, {7., 9.9999999999999*^19}, {8., 
      1.*^22}}]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8.}, {0, 2.49999999984999*^20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.713379748182973*^9},ExpressionUUID->"f4c9c054-2f91-4f1a-a24a-\
c938bf3256de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"The", " ", "results", " ", "are", " ", "different", " ", "because", 
  " ", "converting", " ", "the", " ", "value", " ", "from", " ", "a", " ", 
  "double", " ", "value", " ", "to", " ", "an", " ", "integer", " ", "value", 
  " ", "tells", " ", "Mathematica", " ", "that", " ", "you", " ", "care", " ",
   "about", " ", "significant", " ", "figures", " ", "for", " ", "question", 
  " ", "1", " ", "but", " ", "not", " ", "for", " ", "question", " ", 
  "3."}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.713377024171153*^9, 3.713377403467137*^9, {3.7133798310576468`*^9, 
   3.713379899135515*^9}},ExpressionUUID->"b1ed2c8f-b0d5-428d-b424-\
559685e67856"],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.713377024171153*^9, 
  3.713377402273737*^9},ExpressionUUID->"b4317723-591e-4298-b5fc-\
47c68ee10db6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collatz Conjecture", "Chapter",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7133773842130194`*^9, 3.7133774255144167`*^9, {3.713393453657379*^9, 
   3.713393471092306*^9}},ExpressionUUID->"28d07fa6-6af4-464d-af4d-\
710dc08f57b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7133953455758877`*^9, 
  3.713395363005616*^9}},ExpressionUUID->"449d45d6-c81a-4432-a209-\
78077f9ec3eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"s", "\[NotEqual]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"EvenQ", "[", "s", "]"}], "\[Equal]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", " ", 
        RowBox[{"s", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "*", "s"}], ")"}], "+", "1"}]}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"count", "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"valuess", ",", "s"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[LineSeparator]", 
 RowBox[{
  RowBox[{"Print", "[", "count", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7133952760272765`*^9, 3.7133953413409286`*^9}, {
  3.713395375601028*^9, 3.713395380679116*^9}, {3.7133955609404078`*^9, 
  3.7133955658595695`*^9}},ExpressionUUID->"c048744f-a48e-4a54-b507-\
359722a12e38"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{
  3.713395568016008*^9},ExpressionUUID->"ed2285e8-3e2c-487b-a1f0-\
56b37a7b7b64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Answer Below:", "Subsubsection",
 CellChangeTimes->{{3.713395397258705*^9, 
  3.71339541473851*^9}},ExpressionUUID->"258f03f3-236e-44d8-a335-\
ea65770872b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "2000"}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", "i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"counter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"n", "\[NotEqual]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"EvenQ", "[", "n", "]"}], "\[Equal]", "True"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"n", "/", "2"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"n", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "*", "3"}], ")"}], "+", "1"}]}], ";"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"counter", "=", 
         RowBox[{"counter", "+", "1"}]}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"values", ",", " ", "counter"}], "]"}], ";"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7133952617035646`*^9, {3.7133986549294543`*^9, 
   3.7133986562900105`*^9}},ExpressionUUID->"f154cdcf-d967-46fd-8900-\
aedb0f2d9a9d"],

Cell[CellGroupData[{

Cell[BoxData["values"], "Input",
 CellChangeTimes->{{3.713395267398024*^9, 
  3.7133952679447637`*^9}},ExpressionUUID->"5a7a0064-c018-4036-a761-\
6fc3fefd91e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "7", ",", "2", ",", "5", ",", "8", ",", "16", ",", "3", 
   ",", "19", ",", "6", ",", "14", ",", "9", ",", "9", ",", "17", ",", "17", 
   ",", "4", ",", "12", ",", "20", ",", "20", ",", "7", ",", "7", ",", "15", 
   ",", "15", ",", "10", ",", "23", ",", "10", ",", "111", ",", "18", ",", 
   "18", ",", "18", ",", "106", ",", "5", ",", "26", ",", "13", ",", "13", 
   ",", "21", ",", "21", ",", "21", ",", "34", ",", "8", ",", "109", ",", "8",
    ",", "29", ",", "16", ",", "16", ",", "16", ",", "104", ",", "11", ",", 
   "24", ",", "24", ",", "24", ",", "11", ",", "11", ",", "112", ",", "112", 
   ",", "19", ",", "32", ",", "19", ",", "32", ",", "19", ",", "19", ",", 
   "107", ",", "107", ",", "6", ",", "27", ",", "27", ",", "27", ",", "14", 
   ",", "14", ",", "14", ",", "102", ",", "22", ",", "115", ",", "22", ",", 
   "14", ",", "22", ",", "22", ",", "35", ",", "35", ",", "9", ",", "22", ",",
    "110", ",", "110", ",", "9", ",", "9", ",", "30", ",", "30", ",", "17", 
   ",", "30", ",", "17", ",", "92", ",", "17", ",", "17", ",", "105", ",", 
   "105", ",", "12", ",", "118", ",", "25", ",", "25", ",", "25", ",", "25", 
   ",", "25", ",", "87", ",", "12", ",", "38", ",", "12", ",", "100", ",", 
   "113", ",", "113", ",", "113", ",", "69", ",", "20", ",", "12", ",", "33", 
   ",", "33", ",", "20", ",", "20", ",", "33", ",", "33", ",", "20", ",", 
   "95", ",", "20", ",", "46", ",", "108", ",", "108", ",", "108", ",", "46", 
   ",", "7", ",", "121", ",", "28", ",", "28", ",", "28", ",", "28", ",", 
   "28", ",", "41", ",", "15", ",", "90", ",", "15", ",", "41", ",", "15", 
   ",", "15", ",", "103", ",", "103", ",", "23", ",", "116", ",", "116", ",", 
   "116", ",", "23", ",", "23", ",", "15", ",", "15", ",", "23", ",", "36", 
   ",", "23", ",", "85", ",", "36", ",", "36", ",", "36", ",", "54", ",", 
   "10", ",", "98", ",", "23", ",", "23", ",", "111", ",", "111", ",", "111", 
   ",", "67", ",", "10", ",", "49", ",", "10", ",", "124", ",", "31", ",", 
   "31", ",", "31", ",", "80", ",", "18", ",", "31", ",", "31", ",", "31", 
   ",", "18", ",", "18", ",", "93", ",", "93", ",", "18", ",", "44", ",", 
   "18", ",", "44", ",", "106", ",", "106", ",", "106", ",", "44", ",", "13", 
   ",", "119", ",", "119", ",", "119", ",", "26", ",", "26", ",", "26", ",", 
   "119", ",", "26", ",", "18", ",", "26", ",", "39", ",", "26", ",", "26", 
   ",", "88", ",", "88", ",", "13", ",", "39", ",", "39", ",", "39", ",", 
   "13", ",", "13", ",", "101", ",", "101", ",", "114", ",", "26", ",", "114",
    ",", "52", ",", "114", ",", "114", ",", "70", ",", "70", ",", "21", ",", 
   "52", ",", "13", ",", "13", ",", "34", ",", "34", ",", "34", ",", "127", 
   ",", "21", ",", "83", ",", "21", ",", "127", ",", "34", ",", "34", ",", 
   "34", ",", "52", ",", "21", ",", "21", ",", "96", ",", "96", ",", "21", 
   ",", "21", ",", "47", ",", "47", ",", "109", ",", "47", ",", "109", ",", 
   "65", ",", "109", ",", "109", ",", "47", ",", "47", ",", "8", ",", "122", 
   ",", "122", ",", "122", ",", "29", ",", "29", ",", "29", ",", "78", ",", 
   "29", ",", "122", ",", "29", ",", "21", ",", "29", ",", "29", ",", "42", 
   ",", "42", ",", "16", ",", "29", ",", "91", ",", "91", ",", "16", ",", 
   "16", ",", "42", ",", "42", ",", "16", ",", "42", ",", "16", ",", "60", 
   ",", "104", ",", "104", ",", "104", ",", "42", ",", "24", ",", "29", ",", 
   "117", ",", "117", ",", "117", ",", "117", ",", "117", ",", "55", ",", 
   "24", ",", "73", ",", "24", ",", "117", ",", "16", ",", "16", ",", "16", 
   ",", "42", ",", "24", ",", "37", ",", "37", ",", "37", ",", "24", ",", 
   "24", ",", "86", ",", "86", ",", "37", ",", "130", ",", "37", ",", "37", 
   ",", "37", ",", "37", ",", "55", ",", "55", ",", "11", ",", "24", ",", 
   "99", ",", "99", ",", "24", ",", "24", ",", "24", ",", "143", ",", "112", 
   ",", "50", ",", "112", ",", "24", ",", "112", ",", "112", ",", "68", ",", 
   "68", ",", "11", ",", "112", ",", "50", ",", "50", ",", "11", ",", "11", 
   ",", "125", ",", "125", ",", "32", ",", "125", ",", "32", ",", "125", ",", 
   "32", ",", "32", ",", "81", ",", "81", ",", "19", ",", "125", ",", "32", 
   ",", "32", ",", "32", ",", "32", ",", "32", ",", "50", ",", "19", ",", 
   "45", ",", "19", ",", "45", ",", "94", ",", "94", ",", "94", ",", "45", 
   ",", "19", ",", "19", ",", "45", ",", "45", ",", "19", ",", "19", ",", 
   "45", ",", "45", ",", "107", ",", "63", ",", "107", ",", "58", ",", "107", 
   ",", "107", ",", "45", ",", "45", ",", "14", ",", "32", ",", "120", ",", 
   "120", ",", "120", ",", "120", ",", "120", ",", "120", ",", "27", ",", 
   "58", ",", "27", ",", "76", ",", "27", ",", "27", ",", "120", ",", "120", 
   ",", "27", ",", "19", ",", "19", ",", "19", ",", "27", ",", "27", ",", 
   "40", ",", "40", ",", "27", ",", "40", ",", "27", ",", "133", ",", "89", 
   ",", "89", ",", "89", ",", "133", ",", "14", ",", "133", ",", "40", ",", 
   "40", ",", "40", ",", "40", ",", "40", ",", "32", ",", "14", ",", "58", 
   ",", "14", ",", "53", ",", "102", ",", "102", ",", "102", ",", "40", ",", 
   "115", ",", "27", ",", "27", ",", "27", ",", "115", ",", "115", ",", "53", 
   ",", "53", ",", "115", ",", "27", ",", "115", ",", "53", ",", "71", ",", 
   "71", ",", "71", ",", "97", ",", "22", ",", "115", ",", "53", ",", "53", 
   ",", "14", ",", "14", ",", "14", ",", "40", ",", "35", ",", "128", ",", 
   "35", ",", "128", ",", "35", ",", "35", ",", "128", ",", "128", ",", "22", 
   ",", "35", ",", "84", ",", "84", ",", "22", ",", "22", ",", "128", ",", 
   "128", ",", "35", ",", "35", ",", "35", ",", "27", ",", "35", ",", "35", 
   ",", "53", ",", "53", ",", "22", ",", "48", ",", "22", ",", "22", ",", 
   "97", ",", "97", ",", "97", ",", "141", ",", "22", ",", "48", ",", "22", 
   ",", "141", ",", "48", ",", "48", ",", "48", ",", "97", ",", "110", ",", 
   "22", ",", "48", ",", "48", ",", "110", ",", "110", ",", "66", ",", "66", 
   ",", "110", ",", "61", ",", "110", ",", "35", ",", "48", ",", "48", ",", 
   "48", ",", "61", ",", "9", ",", "35", ",", "123", ",", "123", ",", "123", 
   ",", "123", ",", "123", ",", "61", ",", "30", ",", "123", ",", "30", ",", 
   "123", ",", "30", ",", "30", ",", "79", ",", "79", ",", "30", ",", "30", 
   ",", "123", ",", "123", ",", "30", ",", "30", ",", "22", ",", "22", ",", 
   "30", ",", "22", ",", "30", ",", "48", ",", "43", ",", "43", ",", "43", 
   ",", "136", ",", "17", ",", "43", ",", "30", ",", "30", ",", "92", ",", 
   "92", ",", "92", ",", "43", ",", "17", ",", "136", ",", "17", ",", "30", 
   ",", "43", ",", "43", ",", "43", ",", "87", ",", "17", ",", "43", ",", 
   "43", ",", "43", ",", "17", ",", "17", ",", "61", ",", "61", ",", "105", 
   ",", "56", ",", "105", ",", "30", ",", "105", ",", "105", ",", "43", ",", 
   "43", ",", "25", ",", "30", ",", "30", ",", "30", ",", "118", ",", "118", 
   ",", "118", ",", "30", ",", "118", ",", "56", ",", "118", ",", "118", ",", 
   "118", ",", "118", ",", "56", ",", "56", ",", "25", ",", "74", ",", "74", 
   ",", "74", ",", "25", ",", "25", ",", "118", ",", "118", ",", "17", ",", 
   "56", ",", "17", ",", "69", ",", "17", ",", "17", ",", "43", ",", "43", 
   ",", "25", ",", "131", ",", "38", ",", "38", ",", "38", ",", "38", ",", 
   "38", ",", "69", ",", "25", ",", "131", ",", "25", ",", "131", ",", "87", 
   ",", "87", ",", "87", ",", "131", ",", "38", ",", "25", ",", "131", ",", 
   "131", ",", "38", ",", "38", ",", "38", ",", "38", ",", "38", ",", "30", 
   ",", "38", ",", "30", ",", "56", ",", "56", ",", "56", ",", "131", ",", 
   "12", ",", "51", ",", "25", ",", "25", ",", "100", ",", "100", ",", "100", 
   ",", "38", ",", "25", ",", "144", ",", "25", ",", "100", ",", "25", ",", 
   "25", ",", "144", ",", "144", ",", "113", ",", "51", ",", "51", ",", "51", 
   ",", "113", ",", "113", ",", "25", ",", "25", ",", "113", ",", "51", ",", 
   "113", ",", "144", ",", "69", ",", "69", ",", "69", ",", "95", ",", "12", 
   ",", "64", ",", "113", ",", "113", ",", "51", ",", "51", ",", "51", ",", 
   "64", ",", "12", ",", "64", ",", "12", ",", "38", ",", "126", ",", "126", 
   ",", "126", ",", "38", ",", "33", ",", "126", ",", "126", ",", "126", ",", 
   "33", ",", "33", ",", "126", ",", "126", ",", "33", ",", "126", ",", "33", 
   ",", "64", ",", "82", ",", "82", ",", "82", ",", "170", ",", "20", ",", 
   "33", ",", "126", ",", "126", ",", "33", ",", "33", ",", "33", ",", "64", 
   ",", "33", ",", "25", ",", "33", ",", "25", ",", "33", ",", "33", ",", 
   "51", ",", "51", ",", "20", ",", "46", ",", "46", ",", "46", ",", "20", 
   ",", "20", ",", "46", ",", "46", ",", "95", ",", "33", ",", "95", ",", 
   "139", ",", "95", ",", "95", ",", "46", ",", "46", ",", "20", ",", "139", 
   ",", "20", ",", "20", ",", "46", ",", "46", ",", "46", ",", "95", ",", 
   "20", ",", "90", ",", "20", ",", "46", ",", "46", ",", "46", ",", "46", 
   ",", "139", ",", "108", ",", "20", ",", "64", ",", "64", ",", "108", ",", 
   "108", ",", "59", ",", "59", ",", "108", ",", "33", ",", "108", ",", "152",
    ",", "46", ",", "46", ",", "46", ",", "59", ",", "15", ",", "33", ",", 
   "33", ",", "33", ",", "121", ",", "121", ",", "121", ",", "152", ",", 
   "121", ",", "33", ",", "121", ",", "59", ",", "121", ",", "121", ",", 
   "121", ",", "121", ",", "28", ",", "121", ",", "59", ",", "59", ",", "28", 
   ",", "28", ",", "77", ",", "77", ",", "28", ",", "77", ",", "28", ",", 
   "103", ",", "121", ",", "121", ",", "121", ",", "72", ",", "28", ",", "59",
    ",", "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", "72", ",", 
   "28", ",", "46", ",", "28", ",", "134", ",", "41", ",", "41", ",", "41", 
   ",", "134", ",", "28", ",", "41", ",", "41", ",", "41", ",", "28", ",", 
   "28", ",", "134", ",", "134", ",", "90", ",", "134", ",", "90", ",", "41", 
   ",", "90", ",", "90", ",", "134", ",", "134", ",", "15", ",", "28", ",", 
   "134", ",", "134", ",", "41", ",", "41", ",", "41", ",", "85", ",", "41", 
   ",", "41", ",", "41", ",", "41", ",", "41", ",", "41", ",", "33", ",", 
   "33", ",", "15", ",", "59", ",", "59", ",", "59", ",", "15", ",", "15", 
   ",", "54", ",", "54", ",", "103", ",", "28", ",", "103", ",", "147", ",", 
   "103", ",", "103", ",", "41", ",", "41", ",", "116", ",", "147", ",", "28",
    ",", "28", ",", "28", ",", "28", ",", "28", ",", "178", ",", "116", ",", 
   "147", ",", "116", ",", "28", ",", "54", ",", "54", ",", "54", ",", "147", 
   ",", "116", ",", "116", ",", "28", ",", "28", ",", "116", ",", "116", ",", 
   "54", ",", "54", ",", "72", ",", "147", ",", "72", ",", "46", ",", "72", 
   ",", "72", ",", "98", ",", "98", ",", "23", ",", "67", ",", "116", ",", 
   "116", ",", "54", ",", "54", ",", "54", ",", "116", ",", "15", ",", "67", 
   ",", "15", ",", "54", ",", "15", ",", "15", ",", "41", ",", "41", ",", 
   "36", ",", "129", ",", "129", ",", "129", ",", "36", ",", "36", ",", "129",
    ",", "129", ",", "36", ",", "129", ",", "36", ",", "67", ",", "129", ",", 
   "129", ",", "129", ",", "116", ",", "23", ",", "129", ",", "36", ",", "36",
    ",", "85", ",", "85", ",", "85", ",", "129", ",", "23", ",", "173", ",", 
   "23", ",", "85", ",", "129", ",", "129", ",", "129", ",", "36", ",", "36", 
   ",", "36", ",", "36", ",", "36", ",", "36", ",", "36", ",", "28", ",", 
   "28", ",", "36", ",", "28", ",", "36", ",", "28", ",", "54", ",", "54", 
   ",", "54", ",", "129", ",", "23", ",", "49", ",", "49", ",", "49", ",", 
   "23", ",", "23", ",", "23", ",", "142", ",", "98", ",", "49", ",", "98", 
   ",", "36", ",", "98", ",", "98", ",", "142", ",", "142", ",", "23", ",", 
   "98", ",", "49", ",", "49", ",", "23", ",", "23", ",", "142", ",", "142", 
   ",", "49", ",", "23", ",", "49", ",", "36", ",", "49", ",", "49", ",", 
   "98", ",", "98", ",", "111", ",", "93", ",", "23", ",", "23", ",", "49", 
   ",", "49", ",", "49", ",", "49", ",", "111", ",", "142", ",", "111", ",", 
   "41", ",", "67", ",", "67", ",", "67", ",", "93", ",", "111", ",", "111", 
   ",", "62", ",", "62", ",", "111", ",", "111", ",", "36", ",", "36", ",", 
   "49", ",", "155", ",", "49", ",", "62", ",", "49", ",", "49", ",", "62", 
   ",", "62", ",", "10", ",", "36", ",", "36", ",", "36", ",", "124", ",", 
   "124", ",", "124", ",", "36", ",", "124", ",", "155", ",", "124", ",", 
   "124", ",", "124", ",", "124", ",", "62", ",", "62", ",", "31", ",", "124",
    ",", "124", ",", "124", ",", "31", ",", "31", ",", "124", ",", "124", ",",
    "31", ",", "62", ",", "31", ",", "93", ",", "80", ",", "80", ",", "80", 
   ",", "168", ",", "31", ",", "80", ",", "31", ",", "31", ",", "124", ",", 
   "124", ",", "124", ",", "75", ",", "31", ",", "75", ",", "31", ",", "62", 
   ",", "23", ",", "23", ",", "23", ",", "168", ",", "31", ",", "23", ",", 
   "23", ",", "23", ",", "31", ",", "31", ",", "49", ",", "49", ",", "44", 
   ",", "137", ",", "44", ",", "137", ",", "44", ",", "44", ",", "137", ",", 
   "137", ",", "18", ",", "44", ",", "44", ",", "44", ",", "31", ",", "31", 
   ",", "31", ",", "75", ",", "93", ",", "137", ",", "93", ",", "31", ",", 
   "93", ",", "93", ",", "44", ",", "44", ",", "18", ",", "93", ",", "137", 
   ",", "137", ",", "18", ",", "18", ",", "31", ",", "31", ",", "44", ",", 
   "137", ",", "44", ",", "93", ",", "44", ",", "44", ",", "88", ",", "88", 
   ",", "18", ",", "44", ",", "44", ",", "44", ",", "44", ",", "44", ",", 
   "44", ",", "137", ",", "18", ",", "36", ",", "18", ",", "36", ",", "62", 
   ",", "62", ",", "62", ",", "62", ",", "106", ",", "18", ",", "57", ",", 
   "57", ",", "106", ",", "106", ",", "31", ",", "31", ",", "106", ",", "150",
    ",", "106", ",", "57", ",", "44", ",", "44", ",", "44", ",", "57", ",", 
   "26", ",", "150", ",", "31", ",", "31", ",", "31", ",", "31", ",", "31", 
   ",", "57", ",", "119", ",", "181", ",", "119", ",", "150", ",", "119", ",",
    "119", ",", "31", ",", "31", ",", "119", ",", "57", ",", "57", ",", "57", 
   ",", "119", ",", "119", ",", "119", ",", "119", ",", "119", ",", "31", ",",
    "119", ",", "57", ",", "57", ",", "57", ",", "57", ",", "88", ",", "26", 
   ",", "150", ",", "75", ",", "75", ",", "75", ",", "75", ",", "75", ",", 
   "49", ",", "26", ",", "101", ",", "26", ",", "119", ",", "119", ",", "119",
    ",", "119", ",", "70", ",", "18", ",", "57", ",", "57", ",", "57", ",", 
   "18", ",", "18", ",", "70", ",", "70", ",", "18", ",", "57", ",", "18", 
   ",", "70", ",", "44", ",", "44", ",", "44", ",", "163", ",", "26", ",", 
   "132", ",", "132", ",", "132", ",", "39", ",", "39", ",", "39", ",", "132",
    ",", "39", ",", "132", ",", "39", ",", "132", ",", "39", ",", "39", ",", 
   "70", ",", "70", ",", "26", ",", "132", ",", "132", ",", "132", ",", "26", 
   ",", "26", ",", "132", ",", "132", ",", "88", ",", "39", ",", "88", ",", 
   "70", ",", "88", ",", "88", ",", "132", ",", "132", ",", "39", ",", "176", 
   ",", "26", ",", "26", ",", "132", ",", "132", ",", "132", ",", "88", ",", 
   "39", ",", "39", ",", "39", ",", "83", ",", "39", ",", "39", ",", "39", 
   ",", "176", ",", "39", ",", "39", ",", "31", ",", "31", ",", "39", ",", 
   "39", ",", "31", ",", "31", ",", "57", ",", "31", ",", "57", ",", "83", 
   ",", "57", ",", "57", ",", "132", ",", "132", ",", "13", ",", "52", ",", 
   "52", ",", "52", ",", "26", ",", "26", ",", "26", ",", "145", ",", "101", 
   ",", "145", ",", "101", ",", "52", ",", "101", ",", "101", ",", "39", ",", 
   "39", ",", "26", ",", "101", ",", "145", ",", "145", ",", "26", ",", "26", 
   ",", "101", ",", "101", ",", "26", ",", "52", ",", "26", ",", "176", ",", 
   "145", ",", "145", ",", "145", ",", "101", ",", "114", ",", "26", ",", 
   "52", ",", "52", ",", "52", ",", "52", ",", "52", ",", "145", ",", "114", 
   ",", "101", ",", "114", ",", "52", ",", "26", ",", "26", ",", "26", ",", 
   "52", ",", "114", ",", "52", ",", "52", ",", "52", ",", "114", ",", "114", 
   ",", "145", ",", "145", ",", "70", ",", "44", ",", "70", ",", "26", ",", 
   "70", ",", "70", ",", "96", ",", "96", ",", "13", ",", "114", ",", "65", 
   ",", "65", ",", "114", ",", "114", ",", "114", ",", "158", ",", "52", ",", 
   "39", ",", "52", ",", "114", ",", "52", ",", "52", ",", "65", ",", "65", 
   ",", "13", ",", "52", ",", "65", ",", "65", ",", "13", ",", "13", ",", 
   "39", ",", "39", ",", "127", ",", "39", ",", "127", ",", "114", ",", "127",
    ",", "127", ",", "39", ",", "39", ",", "34", ",", "158", ",", "127", ",", 
   "127", ",", "127", ",", "127", ",", "127", ",", "96", ",", "34", ",", "65",
    ",", "34", ",", "65", ",", "127", ",", "127", ",", "127", ",", "114", ",",
    "34", ",", "34", ",", "127", ",", "127", ",", "34", ",", "34", ",", "65", 
   ",", "65", ",", "83", ",", "96", ",", "83", ",", "127", ",", "83", ",", 
   "83", ",", "171", ",", "171", ",", "21", ",", "83", ",", "34", ",", "34", 
   ",", "127", ",", "127", ",", "127", ",", "34", ",", "34", ",", "78", ",", 
   "34", ",", "127", ",", "34", ",", "34", ",", "65", ",", "65", ",", "34", 
   ",", "26", ",", "26", ",", "26", ",", "34", ",", "34", ",", "26", ",", 
   "26", ",", "34", ",", "26", ",", "34", ",", "78", ",", "52", ",", "52", 
   ",", "52", ",", "127", ",", "21", ",", "140", ",", "47", ",", "47", ",", 
   "47", ",", "47", ",", "47", ",", "52", ",", "21", ",", "140", ",", "21", 
   ",", "140", ",", "47", ",", "47", ",", "47", ",", "140", ",", "96", ",", 
   "34", ",", "34", ",", "34", ",", "96", ",", "96", ",", "140", ",", "140", 
   ",", "96", ",", "34", ",", "96", ",", "140", ",", "47", ",", "47", ",", 
   "47", ",", "171", ",", "21", ",", "96", ",", "140", ",", "140", ",", "21", 
   ",", "21", ",", "21", ",", "96", ",", "47", ",", "34", ",", "47", ",", 
   "140", ",", "47", ",", "47", ",", "96", ",", "96", ",", "21", ",", "47", 
   ",", "91", ",", "91", ",", "21", ",", "21", ",", "47", ",", "47", ",", 
   "47", ",", "47", ",", "47", ",", "47", ",", "47", ",", "47", ",", "140", 
   ",", "140", ",", "109", ",", "39", ",", "21", ",", "21", ",", "65", ",", 
   "65", ",", "65", ",", "91", ",", "109", ",", "65", ",", "109", ",", "140", 
   ",", "60", ",", "60", ",", "60", ",", "153", ",", "109", ",", "109", ",", 
   "34", ",", "34", ",", "109", ",", "109", ",", "153", ",", "153", ",", "47",
    ",", "60", ",", "47", ",", "60", ",", "47", ",", "47", ",", "60", ",", 
   "60", ",", "16", ",", "153", ",", "34", ",", "34", ",", "34", ",", "34", 
   ",", "34", ",", "109", ",", "122", ",", "60", ",", "122", ",", "34", ",", 
   "122", ",", "122", ",", "153", ",", "153", ",", "122", ",", "122", ",", 
   "34", ",", "34", ",", "122", ",", "122", ",", "60", ",", "60", ",", "122", 
   ",", "60", ",", "122", ",", "153", ",", "122", ",", "122", ",", "122", ",",
    "60", ",", "29", ",", "34", ",", "122", ",", "122", ",", "60", ",", "60", 
   ",", "60", ",", "60", ",", "29", ",", "91", ",", "29", ",", "122", ",", 
   "78", ",", "78", ",", "78", ",", "166", ",", "29", ",", "78", ",", "78", 
   ",", "78", ",", "29", ",", "29", ",", "104", ",", "104", ",", "122", ",", 
   "122", ",", "122", ",", "73", ",", "122", ",", "122", ",", "73", ",", "73",
    ",", "29", ",", "60", ",", "60", ",", "60", ",", "21", ",", "21", ",", 
   "21", ",", "166", ",", "21", ",", "73", ",", "21", ",", "21", ",", "21", 
   ",", "21", ",", "73", ",", "73", ",", "29", ",", "47", ",", "47", ",", 
   "47", ",", "29", ",", "29", ",", "135", ",", "135", ",", "42", ",", "135", 
   ",", "42", ",", "73", ",", "42", ",", "42", ",", "135", ",", "135", ",", 
   "29", ",", "135", ",", "42", ",", "42", ",", "42", ",", "42", ",", "42", 
   ",", "104", ",", "29", ",", "73", ",", "29", ",", "73", ",", "135", ",", 
   "135", ",", "135", ",", "135", ",", "91", ",", "29", ",", "135", ",", 
   "135", ",", "91", ",", "91", ",", "42", ",", "42", ",", "91", ",", "73", 
   ",", "91", ",", "42", ",", "135", ",", "135", ",", "135", ",", "73", ",", 
   "16", ",", "179", ",", "29", ",", "29", ",", "135", ",", "135", ",", "135",
    ",", "42", ",", "42", ",", "91", ",", "42", ",", "135", ",", "42", ",", 
   "42", ",", "86", ",", "86", ",", "42", ",", "42", ",", "42", ",", "42", 
   ",", "42", ",", "42", ",", "42", ",", "42", ",", "42", ",", "34", ",", 
   "42", ",", "135", ",", "34", ",", "34", ",", "34", ",", "179", ",", "16", 
   ",", "34", ",", "60", ",", "60", ",", "60", ",", "60", ",", "60", ",", 
   "60", ",", "16", ",", "135", ",", "16", ",", "148", ",", "55", ",", "55", 
   ",", "55", ",", "148", ",", "104", ",", "29", ",", "29", ",", "29", ",", 
   "104", ",", "104", ",", "148", ",", "148", ",", "104", ",", "55", ",", 
   "104", ",", "55", ",", "42", ",", "42", ",", "42", ",", "55", ",", "117", 
   ",", "104", ",", "148", ",", "148", ",", "29", ",", "29", ",", "29", ",", 
   "104", ",", "29", ",", "104", ",", "29", ",", "55", ",", "29", ",", "29", 
   ",", "179", ",", "179", ",", "117", ",", "148", ",", "148", ",", "148", 
   ",", "117", ",", "117", ",", "29", ",", "29", ",", "55", ",", "55", ",", 
   "55", ",", "42", ",", "55", ",", "55", ",", "148", ",", "148", ",", "117", 
   ",", "104", ",", "117", ",", "117", ",", "29", ",", "29", ",", "29", ",", 
   "148", ",", "117", ",", "55", ",", "117", ",", "55", ",", "55", ",", "55", 
   ",", "55", ",", "86", ",", "73", ",", "117", ",", "148", ",", "148", ",", 
   "73", ",", "73", ",", "47", ",", "47", ",", "73", ",", "29", ",", "73", 
   ",", "47", ",", "99", ",", "99", ",", "99", ",", "99", ",", "24", ",", 
   "117", ",", "68", ",", "68", ",", "117", ",", "117", ",", "117", ",", "68",
    ",", "55", ",", "161", ",", "55", ",", "42", ",", "55", ",", "55", ",", 
   "117", ",", "117", ",", "16", ",", "55", ",", "68", ",", "68", ",", "16", 
   ",", "16", ",", "55", ",", "55", ",", "16", ",", "68", ",", "16", ",", 
   "161", ",", "42", ",", "42", ",", "42", ",", "161", ",", "37", ",", "42", 
   ",", "130", ",", "130", ",", "130", ",", "130", ",", "130", ",", "68", ",",
    "37", ",", "42", ",", "37", ",", "130", ",", "130", ",", "130", ",", 
   "130", ",", "161", ",", "37", ",", "130", ",", "130", ",", "130", ",", 
   "37", ",", "37", ",", "68", ",", "68", ",", "130", ",", "68", ",", "130", 
   ",", "130", ",", "130", ",", "130", ",", "117", ",", "117", ",", "24", ",",
    "37", ",", "130", ",", "130", ",", "37", ",", "37", ",", "37", ",", "68", 
   ",", "86", ",", "68", ",", "86", ",", "37", ",", "86", ",", "86", ",", 
   "130", ",", "130", ",", "24", ",", "86", ",", "174", ",", "174", ",", "24",
    ",", "24", ",", "86", ",", "86", ",", "130", ",", "37", ",", "130", ",", 
   "86", ",", "130", ",", "130", ",", "37", ",", "37", ",", "37", ",", "81", 
   ",", "37", ",", "37", ",", "37", ",", "37", ",", "37", ",", "174", ",", 
   "37", ",", "68", ",", "37", ",", "68", ",", "29", ",", "29", ",", "29", 
   ",", "130", ",", "37", ",", "37", ",", "29", ",", "29", ",", "37", ",", 
   "37", ",", "29", ",", "29", ",", "55", ",", "81", ",", "55", ",", "174", 
   ",", "55", ",", "55", ",", "130", ",", "130", ",", "24", ",", "143", ",", 
   "50", ",", "50", ",", "50", ",", "50", ",", "50", ",", "50", ",", "24", 
   ",", "55", ",", "24", ",", "143", ",", "24", ",", "24", ",", "143", ",", 
   "143", ",", "99", ",", "50", ",", "50", ",", "50", ",", "99", ",", "99", 
   ",", "37", ",", "37", ",", "99", ",", "37", ",", "99", ",", "81", ",", 
   "143", ",", "143", ",", "143", ",", "174", ",", "24", ",", "37", ",", "99",
    ",", "99", ",", "50", ",", "50", ",", "50", ",", "81", ",", "24", ",", 
   "174", ",", "24", ",", "81", ",", "143", ",", "143", ",", "143", ",", "99",
    ",", "50", ",", "24", ",", "24", ",", "24", ",", "50", ",", "50", ",", 
   "37", ",", "37", ",", "50", ",", "143", ",", "50", ",", "143", ",", "99", 
   ",", "99", ",", "99", ",", "50", ",", "112", ",", "50", ",", "94", ",", 
   "94", ",", "24", ",", "24", ",", "24", ",", "50", ",", "50", ",", "50", 
   ",", "50", ",", "50", ",", "50", ",", "50", ",", "50", ",", "50", ",", 
   "112"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713395268335819*^9, {3.7133954725860057`*^9, 3.7133954803595314`*^9}, 
   3.71339868476943*^9},ExpressionUUID->"1ff2c457-ad08-4e25-8fae-\
f10fce242cb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "values", "]"}]], "Input",
 CellChangeTimes->{{3.71339524294475*^9, 3.7133952549141293`*^9}, {
  3.713395453757491*^9, 
  3.713395462750471*^9}},ExpressionUUID->"11ca6255-df38-4572-9d1d-\
226560119a60"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2000.}, {0, 181.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.713395463625789*^9, 3.713395482813057*^9}, 
   3.7133986907084756`*^9},ExpressionUUID->"470177d3-f610-40eb-821b-\
ca90c7e9183b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Note: Questions 1-3 have weird variable assignment name because I have made \
mistakes and did not 
know how to clear the list values until I figured out how to do it when doing \
the Collatz Conjecture assignment.\
\>", "Subsection",
 CellChangeTimes->{{3.7133956863337774`*^9, 
  3.7133957874370046`*^9}},ExpressionUUID->"df432565-7c08-4afa-8b94-\
d71e73bb07d1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Newton\[CloseCurlyQuote]s Method",
 FontSize->24,
 FontColor->RGBColor[1, 0, 1]]], "Subsubsection",
 CellChangeTimes->{{3.7135371075724773`*^9, 
  3.71353711432386*^9}},ExpressionUUID->"3f18f429-e2f3-4817-acad-\
12724e574cbf"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"n", "+", "1"}]], "=", " ", 
   RowBox[{
    SubscriptBox["x", "n"], " ", "-", " ", 
    RowBox[{"f", 
     RowBox[{
      RowBox[{"(", 
       SubscriptBox["x", "n"], ")"}], "/", 
      RowBox[{"f", "'"}]}], 
     RowBox[{"(", 
      SubscriptBox["x", "n"], ")"}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7135371704390116`*^9, 3.7135371800125437`*^9}, {
  3.7135372411791124`*^9, 3.7135373163711205`*^9}, {3.7135373897444715`*^9, 
  3.713537413619747*^9}, {3.7135374457942333`*^9, 3.713537473292221*^9}, {
  3.7135375264847956`*^9, 
  3.7135375356152225`*^9}},ExpressionUUID->"0006c25a-1611-42f1-a92f-\
3dbf6f12937a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1)", "Subsubsection",
 CellChangeTimes->{{3.7135520740046797`*^9, 
  3.713552074364815*^9}},ExpressionUUID->"c01e1074-7121-4d06-99f5-\
82a4854646c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   RowBox[{"x", "^", "2"}]}], ";"}]], "Input",ExpressionUUID->"d0cb0b6c-a887-\
409c-9893-a603bff11fc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Guess", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.713548861143935*^9, 
  3.713548864114922*^9}},ExpressionUUID->"7931025d-72e2-4880-9e86-\
106bfa7577a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"f", "[", "Guess", "]"}], "]"}], ">", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Guess", "=", 
     RowBox[{"Guess", "-", 
      RowBox[{
       RowBox[{"f", "[", "Guess", "]"}], "/", 
       RowBox[{
        RowBox[{"f", "'"}], "[", "Guess", "]"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N", "[", "Guess", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"f", "[", "Guess", "]"}], "]"}]}], "}"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7135374777684045`*^9, 3.7135374795147223`*^9}, {
   3.713537512165903*^9, 3.7135376174705477`*^9}, {3.7135376560915713`*^9, 
   3.7135377287160864`*^9}, {3.713537789567968*^9, 3.7135377966087604`*^9}, 
   3.7135488006510906`*^9, 
   3.713548833694565*^9},ExpressionUUID->"80232d2e-f11d-4587-b32b-\
ea78e3d4f4a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001953125`", ",", "3.814697265625`*^-6"}], "}"}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.713537784151226*^9, 3.713537797343698*^9}, 
   3.7135487991583614`*^9, {3.713548850176939*^9, 3.713548869316676*^9}, {
   3.7135520888005276`*^9, 
   3.713552089426544*^9}},ExpressionUUID->"0be4332f-58af-4120-8f61-\
fde85e15e2d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2)", "Subsubsection",
 CellChangeTimes->{{3.7135521050997133`*^9, 
  3.7135521056453123`*^9}},ExpressionUUID->"96ae9379-cab0-4a0a-987a-\
8a29f6997a33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "*", 
      RowBox[{"E", "^", 
       RowBox[{"-", "x"}]}]}], ")"}], "-", "0.16064"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.713548941235369*^9, 
  3.713548953471885*^9}},ExpressionUUID->"4f7a57c0-1a92-4f58-a601-\
c3b1283da12e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
RSr6GxsUOEb6gRvz579/VKR/bSLjN+n/AfhoEsk=
       "]]},
     Annotation[#, "Charting`Private`Tag$1834#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 10}, {-0.4784167118943427, 0.20723927785019164`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7135489546446342`*^9},ExpressionUUID->"433e0090-4e23-4448-aa93-\
16d2e498cfac"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7135489675043545`*^9, 3.713548968818252*^9}, 
   3.713554375192599*^9},ExpressionUUID->"5a46dd13-8ee6-481a-aaa8-\
f84dbbf6190b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     SuperscriptBox["E", 
      RowBox[{"-", "x"}]]}], "-", "0.16064"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"f31404ae-7a07-4b97-ae2b-d1f59541df04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.889764428730936`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713548993707142*^9},ExpressionUUID->"8d00c3a8-69cb-4fa5-a772-\
c538b5a576da"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "*", 
      RowBox[{"E", "^", 
       RowBox[{"-", "x"}]}]}], ")"}], "-", "0.16064"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7135516914880266`*^9, 
  3.7135516928483863`*^9}},ExpressionUUID->"7afd1c92-6f04-4224-9db4-\
d9b8e1df956f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Guess", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.7135490459106617`*^9, 
  3.7135490555059357`*^9}},ExpressionUUID->"bf5712f2-f9c1-4c05-b559-\
f7d6cad51411"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2b) (Ignore For Loop)", "Subsubsection",
 CellChangeTimes->{{3.7135521623639812`*^9, 
  3.7135521866440268`*^9}},ExpressionUUID->"fbb5bb34-c23b-4996-aa04-\
afb41c3d22a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Guess", "=", 
     RowBox[{"Guess", "-", 
      RowBox[{
       RowBox[{"g", "[", "Guess", "]"}], "/", 
       RowBox[{
        RowBox[{"g", "'"}], "[", "Guess", "]"}]}]}]}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Guess", ",", "10"}], "]"}], ",", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"g", "[", "Guess", "]"}], ",", "10"}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7135490595359864`*^9, 3.713549071976593*^9}, {
  3.7135521483158083`*^9, 
  3.713552150175872*^9}},ExpressionUUID->"f65da16a-609d-4319-a63f-\
4eb409541965"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.889764428730936`", ",", 
   RowBox[{"-", "2.7755575615628914`*^-17"}]}], "}"}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.713549037021278*^9, 3.713549075754733*^9}, {
  3.713551664895179*^9, 
  3.7135516667380605`*^9}},ExpressionUUID->"e30fa50a-0221-4878-b795-\
35c1d4a5cbad"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.713551673644427*^9, 
  3.7135516748161755`*^9}},ExpressionUUID->"a6293f7f-a860-4a03-8b5f-\
00ea9295bf29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"counter", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7135516977382183`*^9, 
  3.7135517021928887`*^9}},ExpressionUUID->"cf9e4e0c-0b73-46b3-9bc3-\
1e237d2ba3c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"g", "[", "Guess", "]"}], "]"}], ">", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], " ", "&&", " ", 
    RowBox[{"counter", "\[LessEqual]", "100"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Guess", "=", 
     RowBox[{"Guess", "-", 
      RowBox[{
       RowBox[{"g", "[", "Guess", "]"}], "/", 
       RowBox[{
        RowBox[{"g", "'"}], "[", "Guess", "]"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"counter", "++"}], ";"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N", "[", "Guess", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"f", "[", "Guess", "]"}], "]"}]}], "}"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.713551681022316*^9, 
  3.713551688583587*^9}},ExpressionUUID->"4ba0f04e-e1ab-497e-aa11-\
5b294f96cfd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.8897622642470138`", ",", "2.273806533337197`*^-7"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.7135517160681543`*^9, 
  3.7135517300558453`*^9}},ExpressionUUID->"6832a2e7-40a0-495e-9bc6-\
32f57803ef73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["counter"], "Input",
 CellChangeTimes->{{3.713551717942643*^9, 
  3.713551718628791*^9}},ExpressionUUID->"32d90cf5-4319-4bda-b880-\
cc5a026e5348"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.713551719206352*^9, 
  3.713551733362687*^9}},ExpressionUUID->"c60af475-e8c3-4998-8b52-\
adc08494c9c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"g", "[", "Guess", "]"}], "]"}], ">", 
     RowBox[{"10", "^", 
      RowBox[{"-", "2"}]}]}], " ", "&&", " ", 
    RowBox[{"counter", "\[LessEqual]", "100"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Guess", "=", 
     RowBox[{"Guess", "-", 
      RowBox[{
       RowBox[{"g", "[", "Guess", "]"}], "/", 
       RowBox[{
        RowBox[{"g", "'"}], "[", "Guess", "]"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"counter", "++"}], ";"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N", "[", "Guess", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"f", "[", "Guess", "]"}], "]"}]}], "}"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7135517488796153`*^9, 
  3.7135517489566307`*^9}},ExpressionUUID->"5bfc1bc5-d52d-4f07-a691-\
9bf9e258b374"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.8867296743295663`", ",", "0.00031903078938855245`"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.7135517517261906`*^9, 
  3.713551766364625*^9}},ExpressionUUID->"bf6707e2-a14f-4f17-b061-\
90dd6f08160a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["counter"], "Input",
 CellChangeTimes->{{3.7135517532068443`*^9, 
  3.713551753866024*^9}},ExpressionUUID->"33da95cc-678c-43b2-911d-\
8d44b09891d4"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.7135517545368557`*^9, 
  3.713551768785183*^9}},ExpressionUUID->"32c5ec80-0bd3-4e8a-ba7a-\
f3eb64c99fa5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"relative", " ", "absolute", " ", "error"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"error", "=", " ", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"2.88976", "-", "2.88673"}], "]"}], "/", 
    RowBox[{"Abs", "[", "2.99076", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7135518943155947`*^9, 
  3.713551968254848*^9}},ExpressionUUID->"db466914-e580-4356-98a1-\
f73adad4e2b7"],

Cell[BoxData["0.001013120410865421"], "Input",
 CellChangeTimes->{{3.713552009649081*^9, 
  3.713552012169754*^9}},ExpressionUUID->"7695ddd7-cfe8-4ccc-a48b-\
43bb71e57340"],

Cell["Just over 0.1% error.", "Text",
 CellChangeTimes->{{3.713552032348731*^9, 
  3.7135520481145797`*^9}},ExpressionUUID->"55bba3c5-8aad-4419-a06f-\
d873da657f61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Midpoint Method", "Subsubsection",
 CellChangeTimes->{{3.713539173852412*^9, 3.713539181874864*^9}, {
  3.7135489302376995`*^9, 
  3.7135489373331947`*^9}},ExpressionUUID->"dec62ddf-6334-4a1c-a578-\
abac21b7f4d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7135542558008995`*^9, 
  3.713554271176093*^9}},ExpressionUUID->"b17185ac-efc4-48c6-8b0c-\
e71be1c2597b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.7135542737099743`*^9, 3.7135542763494763`*^9}, {
  3.7135562987193136`*^9, 
  3.7135562999695907`*^9}},ExpressionUUID->"f0f6620b-6fad-49b4-9f48-\
51e8abe08279"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"-", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713554280569486*^9, 
  3.713554282427794*^9}},ExpressionUUID->"d8e0e162-acf2-414a-afa5-\
9fc476bbf677"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.713554284583968*^9, 
  3.7135542860054336`*^9}},ExpressionUUID->"a99909a6-2ee3-44c3-8e26-\
9f70c53d5965"],

Cell[BoxData[
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"h", "[", "c", "]"}], "]"}], ">", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "c", "]"}], " ", ">", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", "c"}], ",", "\[IndentingNewLine]", 
       RowBox[{"a", "=", "c"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}], "/", "2"}]}], ";"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7135391895202723`*^9, 3.713539203603094*^9}, {
  3.7135394464998255`*^9, 3.7135395271873817`*^9}, {3.7135403949874353`*^9, 
  3.713540436459752*^9}, {3.7135542223969064`*^9, 3.7135542270354853`*^9}, {
  3.7135554737222824`*^9, 
  3.7135554773508906`*^9}},ExpressionUUID->"b0aa6d9c-c9a8-477e-8763-\
afcc2c4c88ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"{", 
   RowBox[{"c", ",", 
    RowBox[{"h", "[", "c", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.713554296279294*^9, 
  3.713554319303049*^9}},ExpressionUUID->"8894ae66-6c4a-4c35-82ae-\
586015ba9528"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.7135543137555428`*^9, 3.7135543199894753`*^9}, {
   3.7135554813034973`*^9, 3.713555493709123*^9}, 3.7135563042830677`*^9, 
   3.7135564702182093`*^9},ExpressionUUID->"9a99cbb4-3cd2-4533-925b-\
d9b3c4c24ad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "*", 
      RowBox[{"E", "^", 
       RowBox[{"-", "x"}]}]}], ")"}], "-", "0.16064"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUID-\
>"30fae620-1fdb-41f4-bbf6-0e65c7bd51ba"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
RSr6GxsUOEb6gRvz579/VKR/bSLjN+n/AfhoEsk=
       "]]},
     Annotation[#, "Charting`Private`Tag$1877#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 10}, {-0.4784167118943427, 0.20723927785019164`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.713554352773016*^9},ExpressionUUID->"46ad1895-13b6-4626-bb12-\
06e6be05aacc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     SuperscriptBox["E", 
      RowBox[{"-", "x"}]]}], "-", "0.16064"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"169bf393-35b6-4ec8-a9b5-0c470c281f03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.889764428730936`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7135543842859035`*^9},ExpressionUUID->"04869874-32d3-4250-8d52-\
424f7d46fa42"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "*", 
      RowBox[{"E", "^", 
       RowBox[{"-", "x"}]}]}], ")"}], "-", "0.16064"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713554455049229*^9, 
  3.713554485427552*^9}},ExpressionUUID->"f86dfe55-19ea-4066-a1a2-\
b2dc86ed813a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"count", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.713554552473526*^9, 
  3.713554554472351*^9}},ExpressionUUID->"900bec28-c203-4e0c-95f2-\
0ce6caa42cf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"j", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.7135546123633327`*^9, 3.713554633129648*^9}, {
  3.7135553873664293`*^9, 
  3.713555387428929*^9}},ExpressionUUID->"91b0bc75-e5e7-4b41-b304-\
82f59d48aa3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.7135546364602785`*^9, 3.7135546404600053`*^9}, {
  3.7135553896956367`*^9, 
  3.713555389787674*^9}},ExpressionUUID->"9af5cd05-1fd9-4fde-923e-\
3876b2be3fed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"range", "=", "2.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.7135547249444313`*^9, 3.713554741070942*^9}, {
  3.7135557435531063`*^9, 3.713555745302189*^9}, {3.7135558207537775`*^9, 
  3.713555824115866*^9}, {3.7135566990830126`*^9, 3.713556699176786*^9}, {
  3.713556868436396*^9, 3.713556887960046*^9}, {3.7135576101624126`*^9, 
  3.7135576418962355`*^9}},ExpressionUUID->"39069d98-bcab-4af5-8f53-\
ef1271488391"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"m", "[", "range", "]"}], ">", " ", 
       RowBox[{"10", "^", 
        RowBox[{"{", 
         RowBox[{"-", "5"}], "}"}]}]}], "]"}], " ", "&&", " ", 
     RowBox[{"count", "\[LessEqual]", "100"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "range", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"k", "=", " ", "range"}], ",", "\[IndentingNewLine]", 
       RowBox[{"j", "=", "range"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"range", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"j", "+", "k"}], ")"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "++"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"{", 
   RowBox[{"range", ",", 
    RowBox[{"m", "[", "range", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.713554507756508*^9, 3.7135545786632433`*^9}, {
   3.7135546516160526`*^9, 3.7135547177561994`*^9}, {3.7135547583671074`*^9, 
   3.7135547625690365`*^9}, {3.7135548193814273`*^9, 3.71355486267789*^9}, {
   3.713555316553853*^9, 3.7135553185353727`*^9}, {3.71355540144459*^9, 
   3.713555441694056*^9}, 3.713555719805042*^9, {3.7135558289267726`*^9, 
   3.7135558584123263`*^9}, {3.71355599095984*^9, 3.7135559931438403`*^9}, 
   3.71355606570713*^9, 3.7135567055359917`*^9, {3.7135576668516517`*^9, 
   3.7135577184582376`*^9}},ExpressionUUID->"ef83c772-35d5-41ca-b8f1-\
f2252b5336ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.5`", ",", "0.04457249655974699`"}], "}"}]], "Print",
 CellChangeTimes->{{3.713554709147272*^9, 3.713554712079544*^9}, {
   3.7135547443652153`*^9, 3.7135547674912186`*^9}, {3.7135548454133615`*^9, 
   3.713554873023012*^9}, 3.713554944960724*^9, {3.7135553228975368`*^9, 
   3.713555327815977*^9}, {3.7135554219433236`*^9, 3.7135554495057907`*^9}, 
   3.7135556914463253`*^9, {3.71355572483194*^9, 3.71355574784953*^9}, 
   3.713555860413151*^9, {3.7135559940218267`*^9, 3.7135559973170223`*^9}, {
   3.7135566068624887`*^9, 3.7135566162239075`*^9}, {3.7135567847265043`*^9, 
   3.7135567987770815`*^9}, 3.713556892599209*^9, {3.7135576167275734`*^9, 
   3.713557703566985*^9}, 
   3.7135577398665094`*^9},ExpressionUUID->"18f23f0a-9542-42a3-a66e-\
448a803a368e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.713557742396391*^9, 
  3.7135577536465197`*^9}},ExpressionUUID->"bd1b55bd-8c0c-4a7d-b215-\
bc07fe4f3b75"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7135577546639347`*^9, 
  3.713557754679327*^9}},ExpressionUUID->"eee8273e-5f18-4366-a1a4-\
24f3e83ef13f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1007, 696},
WindowMargins->{{Automatic, 276}, {Automatic, 83}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 153, 3, 101, "Title", "ExpressionUUID" -> \
"a0f0a94a-fa70-4807-bf02-c574aa57c6c7"],
Cell[CellGroupData[{
Cell[758, 29, 157, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"63e32368-b2e8-4b8d-b649-8291100d62f5"],
Cell[918, 34, 509, 15, 30, "Input", "ExpressionUUID" -> \
"4e3b18d0-6a4c-497b-af5e-ca8d745baec0"],
Cell[CellGroupData[{
Cell[1452, 53, 201, 5, 30, "Input", "ExpressionUUID" -> \
"4adb9e43-a63a-45e5-b68c-518286581a65"],
Cell[1656, 60, 135, 3, 30, "Output", "ExpressionUUID" -> \
"77b0dce9-d5d0-4d49-b524-bd2f9af5e058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1828, 68, 644, 17, 69, "Input", "ExpressionUUID" -> \
"6cd99a58-ba7e-4109-88dd-bbdb49f224cb"],
Cell[CellGroupData[{
Cell[2497, 89, 168, 4, 24, "Print", "ExpressionUUID" -> \
"a3447106-5caf-4106-8396-83198e106837"],
Cell[2668, 95, 166, 4, 24, "Print", "ExpressionUUID" -> \
"d624cd12-38f1-479f-9b51-8ed56e0f1e57"],
Cell[2837, 101, 159, 4, 24, "Print", "ExpressionUUID" -> \
"9d053ed6-30b9-41cf-992a-5c24aa3d7a5e"],
Cell[2999, 107, 161, 4, 24, "Print", "ExpressionUUID" -> \
"e99eb4ae-37cc-4a57-8dc0-982c338de8db"],
Cell[3163, 113, 169, 4, 24, "Print", "ExpressionUUID" -> \
"594eacec-2da6-4eca-8c5b-ce1e7f64d7ed"],
Cell[3335, 119, 165, 4, 24, "Print", "ExpressionUUID" -> \
"82aa6a1b-20e1-4fad-98ca-c73aba46ce32"],
Cell[3503, 125, 169, 4, 24, "Print", "ExpressionUUID" -> \
"e4d1e84f-a846-4d62-a8fa-adc9b9346837"],
Cell[3675, 131, 167, 4, 24, "Print", "ExpressionUUID" -> \
"8673e728-a889-46ff-82ff-ccd08c4cd28b"]
}, Open  ]]
}, Open  ]],
Cell[3869, 139, 408, 8, 30, "Input", "ExpressionUUID" -> \
"6f65873d-ecba-48eb-9a68-6b73584afca7"],
Cell[CellGroupData[{
Cell[4302, 151, 1059, 25, 107, "Input", "ExpressionUUID" -> \
"14a2c9a0-9d1f-43ed-91f4-7dd5e0df2f69"],
Cell[CellGroupData[{
Cell[5386, 180, 173, 3, 24, "Print", "ExpressionUUID" -> \
"f716dc81-c1e5-4b33-93fb-6f8023e8d0d1"],
Cell[5562, 185, 171, 3, 24, "Print", "ExpressionUUID" -> \
"fedbf002-0a48-4ca6-b557-44a5292e105a"],
Cell[5736, 190, 170, 3, 24, "Print", "ExpressionUUID" -> \
"083ac28b-7810-4f50-b51b-5102f04330a7"],
Cell[5909, 195, 172, 3, 24, "Print", "ExpressionUUID" -> \
"13e07a26-c7f7-4714-a409-3aff4afdfbbb"],
Cell[6084, 200, 170, 3, 24, "Print", "ExpressionUUID" -> \
"80e8edd4-443c-4b80-a5a2-e63adcd9232c"],
Cell[6257, 205, 172, 3, 24, "Print", "ExpressionUUID" -> \
"b8dbe8bb-e87c-43fb-87db-302b3e6b26f4"],
Cell[6432, 210, 176, 3, 24, "Print", "ExpressionUUID" -> \
"037a5e9f-8081-4033-92c1-cde1adeb6019"],
Cell[6611, 215, 176, 3, 24, "Print", "ExpressionUUID" -> \
"f26370ed-10fc-4b24-b6a7-c5120ce62a87"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6836, 224, 294, 5, 30, "Input", "ExpressionUUID" -> \
"8a86da80-a5fc-4070-a85f-b000929a790e"],
Cell[7133, 231, 400, 9, 33, "Output", "ExpressionUUID" -> \
"7139345b-b588-4788-9b3e-249b9784d1e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7570, 245, 350, 6, 30, "Input", "ExpressionUUID" -> \
"82acd68d-e8a8-4ca2-901a-890386bcc409"],
Cell[7923, 253, 1501, 39, 223, "Output", "ExpressionUUID" -> \
"6ad12ce8-72c4-4565-9973-c69b7bfc4d0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9473, 298, 252, 6, 49, "Subsection", "ExpressionUUID" -> \
"673403ba-d5ec-4bea-b2de-2c35e868a4a7"],
Cell[9728, 306, 1046, 30, 69, "Input", "ExpressionUUID" -> \
"331dd45a-a76b-4dc7-b88d-79de8a6b2a70"],
Cell[CellGroupData[{
Cell[10799, 340, 706, 18, 69, "Input", "ExpressionUUID" -> \
"be3cfa46-6442-455d-a1ff-66ab9b5570bf"],
Cell[CellGroupData[{
Cell[11530, 362, 155, 3, 22, "Print", "ExpressionUUID" -> \
"a24a599f-6f61-4619-82e9-e3a472ecfc4f"],
Cell[11688, 367, 155, 3, 22, "Print", "ExpressionUUID" -> \
"980f6748-fdc8-46d0-bc30-d3d7b5f69483"],
Cell[11846, 372, 153, 3, 22, "Print", "ExpressionUUID" -> \
"b6130c4f-57f0-41bf-88c9-0ff5cf1b7cf8"],
Cell[12002, 377, 153, 3, 22, "Print", "ExpressionUUID" -> \
"66403a93-533a-4ad9-b1b0-19ace2442f63"],
Cell[12158, 382, 155, 3, 22, "Print", "ExpressionUUID" -> \
"aceda6ff-76dd-45b0-896f-f6ec0110cdc9"],
Cell[12316, 387, 155, 3, 22, "Print", "ExpressionUUID" -> \
"da176e0a-e04a-4ef5-ae68-6344caa7754a"],
Cell[12474, 392, 155, 3, 22, "Print", "ExpressionUUID" -> \
"975bb4d6-5df1-4136-a845-414f61e83ea1"],
Cell[12632, 397, 155, 3, 22, "Print", "ExpressionUUID" -> \
"a201e87f-de6d-425a-883f-0d313c30c25b"]
}, Open  ]]
}, Open  ]],
Cell[12814, 404, 963, 25, 126, "Input", "ExpressionUUID" -> \
"9b3afb8d-e5d2-42d9-bc19-e03f75cccacb"],
Cell[13780, 431, 435, 9, 30, "Input", "ExpressionUUID" -> \
"59390838-0dd9-4bbf-9ef4-d55718af923e"],
Cell[CellGroupData[{
Cell[14240, 444, 197, 4, 30, "Input", "ExpressionUUID" -> \
"3a1b5aaa-68ac-49b0-bdfb-94348bfc65aa"],
Cell[14440, 450, 1372, 39, 228, "Output", "ExpressionUUID" -> \
"3f67c46c-49d6-4f42-9a9e-3e18b4f49f45"]
}, Open  ]],
Cell[15827, 492, 280, 6, 30, "Text", "ExpressionUUID" -> \
"db3cdc69-07bd-4bbd-9ab7-34d9ed76b776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16144, 503, 203, 4, 49, "Subsection", "ExpressionUUID" -> \
"e422aed2-bb53-4f6f-b294-18d606666d15"],
Cell[CellGroupData[{
Cell[16372, 511, 606, 17, 69, "Input", "ExpressionUUID" -> \
"6e891a42-84c2-45c3-b4f5-ab95ed38f58a"],
Cell[CellGroupData[{
Cell[17003, 532, 180, 5, 40, "Print", "ExpressionUUID" -> \
"38acb43d-2954-4932-a3ec-448505b6ce62"],
Cell[17186, 539, 186, 5, 40, "Print", "ExpressionUUID" -> \
"8c103102-f37d-40bb-a93c-eac2bcd29daf"],
Cell[17375, 546, 192, 5, 40, "Print", "ExpressionUUID" -> \
"8069839f-16ef-41dd-9328-211ebbf693ca"],
Cell[17570, 553, 198, 5, 40, "Print", "ExpressionUUID" -> \
"40224134-8168-4cf7-bbf3-f8844991f171"],
Cell[17771, 560, 204, 5, 40, "Print", "ExpressionUUID" -> \
"2a09e113-c03d-435e-bb69-138b7ddd9d19"],
Cell[17978, 567, 210, 5, 40, "Print", "ExpressionUUID" -> \
"dc35344b-7960-4a97-a160-1f148d4cc129"],
Cell[18191, 574, 220, 6, 40, "Print", "ExpressionUUID" -> \
"5abf7c69-4bfe-4737-ba39-942d7f976f94"],
Cell[18414, 582, 226, 6, 40, "Print", "ExpressionUUID" -> \
"e72ae56e-f378-40fd-bbd2-906825bda746"]
}, Open  ]]
}, Open  ]],
Cell[18667, 592, 926, 25, 107, "Input", "ExpressionUUID" -> \
"71fbe25b-a58a-4265-b425-d66a0f1b31b6"],
Cell[CellGroupData[{
Cell[19618, 621, 166, 3, 30, "Input", "ExpressionUUID" -> \
"f64be764-4dbc-4f29-9112-d35472d02374"],
Cell[19787, 626, 674, 14, 82, "Output", "ExpressionUUID" -> \
"43adb8b2-c326-4262-83fb-720235631669"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20498, 645, 198, 4, 30, "Input", "ExpressionUUID" -> \
"371551e2-d53b-4a43-9ffa-983912edc27d"],
Cell[20699, 651, 1449, 39, 223, "Output", "ExpressionUUID" -> \
"f4c9c054-2f91-4f1a-a24a-c938bf3256de"],
Cell[CellGroupData[{
Cell[22173, 694, 721, 13, 41, "Print", "ExpressionUUID" -> \
"b1ed2c8f-b0d5-428d-b424-559685e67856"],
Cell[22897, 709, 200, 5, 22, "Print", "ExpressionUUID" -> \
"b4317723-591e-4298-b5fc-47c68ee10db6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23158, 721, 265, 6, 72, "Chapter", "ExpressionUUID" -> \
"28d07fa6-6af4-464d-af4d-710dc08f57b8"],
Cell[23426, 729, 367, 10, 69, "Input", "ExpressionUUID" -> \
"449d45d6-c81a-4432-a209-78077f9ec3eb"],
Cell[CellGroupData[{
Cell[23818, 743, 1128, 29, 164, "Input", "ExpressionUUID" -> \
"c048744f-a48e-4a54-b507-359722a12e38"],
Cell[24949, 774, 129, 3, 22, "Print", "ExpressionUUID" -> \
"ed2285e8-3e2c-487b-a1f0-56b37a7b7b64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25115, 782, 163, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"258f03f3-236e-44d8-a335-ea65770872b2"],
Cell[25281, 787, 1347, 36, 183, "Input", "ExpressionUUID" -> \
"f154cdcf-d967-46fd-8900-aedb0f2d9a9d"],
Cell[CellGroupData[{
Cell[26653, 827, 160, 3, 30, "Input", "ExpressionUUID" -> \
"5a7a0064-c018-4036-a761-6fc3fefd91e0"],
Cell[26816, 832, 24003, 315, 1304, "Output", "ExpressionUUID" -> \
"1ff2c457-ad08-4e25-8fae-f10fce242cb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50856, 1152, 242, 5, 30, "Input", "ExpressionUUID" -> \
"11ca6255-df38-4572-9d1d-226560119a60"],
Cell[51101, 1159, 8544, 157, 238, "Output", "ExpressionUUID" -> \
"470177d3-f610-40eb-821b-ca90c7e9183b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59694, 1322, 374, 8, 109, "Subsection", "ExpressionUUID" -> \
"df432565-7c08-4afa-8b94-d71e73bb07d1"],
Cell[CellGroupData[{
Cell[60093, 1334, 250, 5, 46, "Subsubsection", "ExpressionUUID" -> \
"3f18f429-e2f3-4817-acad-12724e574cbf"],
Cell[60346, 1341, 709, 19, 30, "Input", "ExpressionUUID" -> \
"0006c25a-1611-42f1-a92f-3dbf6f12937a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61092, 1365, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"c01e1074-7121-4d06-99f5-82a4854646c5"],
Cell[61250, 1370, 184, 5, 30, "Input", "ExpressionUUID" -> \
"d0cb0b6c-a887-409c-9893-a603bff11fc8"],
Cell[61437, 1377, 199, 5, 30, "Input", "ExpressionUUID" -> \
"7931025d-72e2-4880-9e86-106bfa7577a0"],
Cell[CellGroupData[{
Cell[61661, 1386, 1021, 29, 69, "Input", "ExpressionUUID" -> \
"80232d2e-f11d-4587-b32b-ea78e3d4f4a4"],
Cell[62685, 1417, 404, 9, 27, "Print", "ExpressionUUID" -> \
"0be4332f-58af-4120-8f61-fde85e15e2d1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63138, 1432, 157, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"96ae9379-cab0-4a0a-987a-8a29f6997a33"],
Cell[CellGroupData[{
Cell[63320, 1439, 418, 13, 30, "Input", "ExpressionUUID" -> \
"4f7a57c0-1a92-4f58-a601-c3b1283da12e"],
Cell[63741, 1454, 8935, 165, 239, "Output", "ExpressionUUID" -> \
"433e0090-4e23-4448-aa93-16d2e498cfac"]
}, Open  ]],
Cell[72691, 1622, 177, 3, 30, "Input", "ExpressionUUID" -> \
"5a46dd13-8ee6-481a-aaa8-f84dbbf6190b"],
Cell[CellGroupData[{
Cell[72893, 1629, 294, 9, 33, "Input", "ExpressionUUID" -> \
"f31404ae-7a07-4b97-ae2b-d1f59541df04"],
Cell[73190, 1640, 198, 5, 30, "Output", "ExpressionUUID" -> \
"8d00c3a8-69cb-4fa5-a772-c538b5a576da"]
}, Open  ]],
Cell[73403, 1648, 369, 11, 30, "Input", "ExpressionUUID" -> \
"7afd1c92-6f04-4224-9db4-d9b8e1df956f"],
Cell[73775, 1661, 201, 5, 30, "Input", "ExpressionUUID" -> \
"bf5712f2-f9c1-4c05-b559-f7d6cad51411"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74013, 1671, 176, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"fbb5bb34-c23b-4996-aa04-afb41c3d22a6"],
Cell[CellGroupData[{
Cell[74214, 1678, 852, 26, 69, "Input", "ExpressionUUID" -> \
"f65da16a-609d-4319-a63f-4eb409541965"],
Cell[75069, 1706, 358, 9, 27, "Print", "ExpressionUUID" -> \
"e30fa50a-0221-4878-b795-35c1d4a5cbad"]
}, Open  ]],
Cell[75442, 1718, 154, 3, 30, "Input", "ExpressionUUID" -> \
"a6293f7f-a860-4a03-8b5f-00ea9295bf29"],
Cell[75599, 1723, 203, 5, 30, "Input", "ExpressionUUID" -> \
"cf9e4e0c-0b73-46b3-9bc3-1e237d2ba3c8"],
Cell[CellGroupData[{
Cell[75827, 1732, 953, 29, 88, "Input", "ExpressionUUID" -> \
"4ba0f04e-e1ab-497e-aa11-5b294f96cfd1"],
Cell[76783, 1763, 244, 6, 27, "Print", "ExpressionUUID" -> \
"6832a2e7-40a0-495e-9bc6-32f57803ef73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77064, 1774, 159, 3, 30, "Input", "ExpressionUUID" -> \
"32d90cf5-4319-4bda-b880-cc5a026e5348"],
Cell[77226, 1779, 154, 3, 30, "Output", "ExpressionUUID" -> \
"c60af475-e8c3-4998-8b52-adc08494c9c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77417, 1787, 957, 29, 88, "Input", "ExpressionUUID" -> \
"5bfc1bc5-d52d-4f07-a691-9bf9e258b374"],
Cell[78377, 1818, 243, 6, 22, "Print", "ExpressionUUID" -> \
"bf6707e2-a14f-4f17-b061-90dd6f08160a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78657, 1829, 161, 3, 30, "Input", "ExpressionUUID" -> \
"33da95cc-678c-43b2-911d-8d44b09891d4"],
Cell[78821, 1834, 156, 3, 30, "Output", "ExpressionUUID" -> \
"32c5ec80-0bd3-4e8a-ba7a-f3eb64c99fa5"]
}, Open  ]],
Cell[78992, 1840, 439, 12, 50, "Input", "ExpressionUUID" -> \
"db466914-e580-4356-98a1-f73adad4e2b7"],
Cell[79434, 1854, 172, 3, 30, InheritFromParent, "ExpressionUUID" -> \
"7695ddd7-cfe8-4ccc-a48b-43bb71e57340"],
Cell[79609, 1859, 165, 3, 30, "Text", "ExpressionUUID" -> \
"55bba3c5-8aad-4419-a06f-d873da657f61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79811, 1867, 219, 4, 39, "Subsubsection", "ExpressionUUID" -> \
"dec62ddf-6334-4a1c-a578-abac21b7f4d8"],
Cell[80033, 1873, 250, 7, 30, "Input", "ExpressionUUID" -> \
"b17185ac-efc4-48c6-8b0c-e71be1c2597b"],
Cell[80286, 1882, 250, 6, 30, "Input", "ExpressionUUID" -> \
"f0f6620b-6fad-49b4-9f48-51e8abe08279"],
Cell[80539, 1890, 212, 6, 30, "Input", "ExpressionUUID" -> \
"d8e0e162-acf2-414a-afa5-9fc476bbf677"],
Cell[80754, 1898, 195, 5, 30, "Input", "ExpressionUUID" -> \
"a99909a6-2ee3-44c3-8e26-9f70c53d5965"],
Cell[80952, 1905, 1034, 27, 107, "Input", "ExpressionUUID" -> \
"b0aa6d9c-c9a8-477e-8763-afcc2c4c88ec"],
Cell[CellGroupData[{
Cell[82011, 1936, 261, 7, 30, "Input", "ExpressionUUID" -> \
"8894ae66-6c4a-4c35-82ae-586015ba9528"],
Cell[82275, 1945, 303, 6, 22, "Print", "ExpressionUUID" -> \
"9a99cbb4-3cd2-4533-925b-d9b3c4c24ad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82615, 1956, 349, 11, 30, "Input", "ExpressionUUID" -> \
"30fae620-1fdb-41f4-bbf6-0e65c7bd51ba"],
Cell[82967, 1969, 8933, 165, 239, "Output", "ExpressionUUID" -> \
"46ad1895-13b6-4626-bb12-06e6be05aacc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91937, 2139, 294, 9, 33, "Input", "ExpressionUUID" -> \
"169bf393-35b6-4ec8-a9b5-0c470c281f03"],
Cell[92234, 2150, 200, 5, 30, "Output", "ExpressionUUID" -> \
"04869874-32d3-4250-8d52-424f7d46fa42"]
}, Open  ]],
Cell[92449, 2158, 355, 11, 30, "Input", "ExpressionUUID" -> \
"f86dfe55-19ea-4066-a1a2-b2dc86ed813a"],
Cell[92807, 2171, 197, 5, 30, "Input", "ExpressionUUID" -> \
"900bec28-c203-4e0c-95f2-0ce6caa42cf2"],
Cell[93007, 2178, 246, 6, 30, "Input", "ExpressionUUID" -> \
"91b0bc75-e5e7-4b41-b304-82f59d48aa3d"],
Cell[93256, 2186, 248, 6, 30, "Input", "ExpressionUUID" -> \
"9af5cd05-1fd9-4fde-923e-3876b2be3fed"],
Cell[93507, 2194, 450, 8, 30, "Input", "ExpressionUUID" -> \
"39069d98-bcab-4af5-8f53-ef1271488391"],
Cell[CellGroupData[{
Cell[93982, 2206, 1625, 38, 145, "Input", "ExpressionUUID" -> \
"ef83c772-35d5-41ca-b8f1-f2252b5336ec"],
Cell[95610, 2246, 805, 13, 22, "Print", "ExpressionUUID" -> \
"18f23f0a-9542-42a3-a66e-448a803a368e"]
}, Open  ]],
Cell[96430, 2262, 154, 3, 30, "Input", "ExpressionUUID" -> \
"bd1b55bd-8c0c-4a7d-b215-bc07fe4f3b75"],
Cell[96587, 2267, 154, 3, 30, InheritFromParent, "ExpressionUUID" -> \
"eee8273e-5f18-4366-a1a4-24f3e83ef13f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

